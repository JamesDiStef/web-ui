$desktop-breakpoint: 992px;

.mapbox-map-container {
    width: 100%;
    height: 100%;
}

.mapboxgl-control-container {
    .mapboxgl-ctrl {
        &-group {
            margin: 10px var(--spacing-small) 10px 0 !important;
            border-radius: var(--rounding-large);
            box-shadow: 0 0 0 var(--spacing-xxx-small) #e5e7eb !important;

            button {
                padding: var(--spacing-large); // UX design
            }
        }

        &-zoom-in {
            background-image: url('../../../assets/plus.svg');
            background-repeat: no-repeat;
            background-size: 20px 20px;
            background-position: center center;
        }

        &-zoom-out {
            background-image: url('../../../assets/minus.svg');
            background-repeat: no-repeat;
            background-size: 20px 20px;
            background-position: center center;
        }

        &-icon {
            background-image: none;
        }
    }
    .mapboxgl-ctrl-top-right {
        @media (min-width: $desktop-breakpoint) {
            // Base case: Only venue selector (no view mode switch)
            .mapsindoors-map:has(> .venue-selector__button):not(:has(.view-mode-switch)) & {
                top: calc(1.4 * var(--spacing-xxxx-large));
            }

            // When only view mode switch exists (no venue selector)
            .mapsindoors-map:not(:has(> .venue-selector__button)):has(.view-mode-switch) & {
                top: calc(2 * var(--spacing-xxxx-large));
            }

            // When both view mode switch and venue selector exist
            .mapsindoors-map:has(> .venue-selector__button):has(.view-mode-switch) & {
                top: calc(3 * var(--spacing-xxxx-large));
            }

            .app__main .mapbox-map-container:has(.view-mode-switch) & {
                top: 0 !important;
            }
        }
    }
}